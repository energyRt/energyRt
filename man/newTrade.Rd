% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-trade.R
\name{newTrade}
\alias{newTrade}
\title{Create new trade object}
\usage{
newTrade(
  name = "",
  desc = "",
  commodity = character(),
  routes = data.frame(),
  trade = data.frame(),
  fixom = data.frame(),
  varom = data.frame(),
  invcost = data.frame(),
  olife = data.frame(),
  start = data.frame(start = -Inf, stringsAsFactors = FALSE),
  end = data.frame(end = Inf, stringsAsFactors = FALSE),
  capacity = data.frame(),
  capacityVariable = TRUE,
  aux = data.frame(),
  aeff = data.frame(),
  cap2act = 1,
  optimizeRetirement = FALSE,
  misc = list(),
  ...
)
}
\arguments{
\item{name}{character. Name of the trade object, used in sets.}

\item{desc}{character. Description of the trade object.}

\item{commodity}{character. The traded commodity short name.}

\item{routes}{data.frame. Source and destination regions. For bivariate trade define both directions in separate rows.
\describe{
\item{from}{character. Source region.}
\item{to}{character. Destination region.}
}}

\item{trade}{data.frame. Technical parameters of trade.
\describe{
\item{region}{character. Region name to apply the parameter, NA for every region.}
\item{year}{integer. Year to apply the parameter, NA for every year.}
\item{slice}{character. Time slice to apply the parameter, NA for every slice.}
\item{trade}{numeric. Trade volume.}
}}

\item{fixom}{data.frame. (not implemented!) Fixed operation and maintenance costs.}

\item{varom}{data.frame. (not implemented!) Variable operation and maintenance costs.}

\item{invcost}{data.frame. Investment cost, used when capacityVariable is TRUE.
\describe{
\item{region}{character. Region name to apply the parameter, NA for every region.}
\item{year}{integer. Year to apply the parameter, NA for every year.}
\item{invcost}{numeric. Investment cost.}
}}

\item{olife}{numeric. Operational life of the trade object.}

\item{start}{data.frame. Start year when the trade-type of process is available for investment.
\describe{
\item{region}{character. Regions where the trade-type of process is available for investment.}
\item{start}{integer. The first year when the trade-type of process is available for investment.}
}}

\item{end}{data.frame. End year when the trade-type of process is available for investment.
\describe{
\item{region}{character. Region name to apply the parameter, NA for every region.}
\item{end}{integer. The last year when the trade-type of process is available for investment.}
}}

\item{capacity}{data.frame. (not implemented!) Capacity parameters of the trade object.}

\item{capacityVariable}{logical. If TRUE, the capacity variable of the trade object is optimized.  If FALSE, the capacity is defined by availability parameters (\verb{ava.*}) in the trade-flow units.}

\item{aux}{data.frame. Auxiliary commodity of trade.
\describe{
\item{acomm}{character. Name of the auxiliary commodity (used in sets).}
\item{unit}{character. Unit of the auxiliary commodity.}
}}

\item{aeff}{data.frame. Auxiliary commodity efficiency parameters.
\describe{
\item{acomm}{character. Name of the auxiliary commodity (used in sets).}
\item{region}{character. Region name to apply the parameter, NA for every region.}
\item{year}{integer. Year to apply the parameter, NA for every year.}
\item{slice}{character. Time slice to apply the parameter, NA for every slice.}
\item{trade2ainp}{numeric. Trade-to-auxiliary-input-commodity coefficient (multiplier).}
\item{trade2aout}{numeric. Trade-to-auxiliary-output-commodity coefficient (multiplier).}
}}

\item{cap2act}{numeric. Capacity to activity ratio.}

\item{optimizeRetirement}{logical. Incidates if the retirement of the trade object should be optimized. Also requires the same parameter in the \code{model} or \code{scenario} class to be set to TRUE to be effective.}

\item{misc}{list. Additional information.}
}
\value{
trade object with given specifications.
}
\description{
Constructor for trade object.
}
\details{
Trade objects are used to represent inter-regional exchange in the model.
Without trade, every region is isolated and can only use its own resources.
The class defines trade routes, efficiency, costs,
and other parameters related to the process. Number of routes per trade object is not
limited. One trade object can have a part or entire trade network of the model.
However, it has a distinct name and all the routs will be optimized together.
Create separate trade objects to optimize different parts of the trade network
(aka transmission lines).
}
\examples{
PIPELINE <- newTrade(
  name = "PIPELINE",
  desc = "Some transport pipeline",
  routes = data.frame(
    src = c("R1", "R2"),
    dst = c("R2", "R3")
  ),
  trade = data.frame(
    src = c("R1", "R2"),
    dst = c("R2", "R3"),
    teff = c(0.99, 0.98)
  ),
  olife = list(olife = 60)
)
}
\concept{trade, process, constructor}
