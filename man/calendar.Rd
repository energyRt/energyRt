% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-calendar.R
\docType{class}
\name{newCalendar}
\alias{newCalendar}
\alias{make_timetable}
\alias{calendar-class}
\title{Generate a new calendar object from}
\usage{
newCalendar(timetable = NULL, year_fraction = 1, ...)

make_timetable(
  struct = list(ANNUAL = "ANNUAL"),
  year_fraction = 1,
  warn = FALSE
)
}
\arguments{
\item{timetable}{data.frame with the calendar structure.}

\item{year_fraction}{numeric scalar, used for validation or calculation (if missing) of the \code{share} column in the given \code{timetable}. The default value is \code{1L} meaning the sum of shares of all slices in the table is equal to one (year). Lower than one value indicates that the calendar represents not a full year. Assigning the parameter to \code{NULL} will drop the validation.}

\item{...}{optional \code{name}, \code{desc}, strings, character \code{default_timeframe}, and list \code{misc} with any relevant content. All other arguments will be ignored.}

\item{struct}{named list of timeframes with sets of timeslices and optional shares of every slice or frame in the nest}

\item{warn}{logical, if TRUE, warning will be issued if \code{ANNUAL} level does not exists in the given structure. The level will be auto-created to complete the time-structure.}
}
\value{
an object of class \code{calendar} with the specified structure.

an data.frame with the specified structure.
}
\description{
Sub-annual time resolution is represented by nested, named
time-frames and time-slices.
}
\section{Slots}{

\describe{
\item{\code{name}}{character, (optional) name of the calendar for own references}

\item{\code{desc}}{character, (optional) description of the calendar}

\item{\code{timeframes}}{a named list of nested sub-annual levels with vectors
of individual elements.}

\item{\code{timetable}}{data.frame with levels of timeframes in the named columns,
and number of rows equal to the total number of time-slices on the lowest level. Every timeframe is a set of timeslices ("slices") - a named fragment of time with a year-share. Timeframes have nested structure. Though every slice may have different sub-slices (similar to the real-world calendar).
\describe{
\item{ANNUAL}{character, annual, the top level of timeframes}
\item{TIMEFRAME2}{character, (optional) first subannual level of timeframes}
\item{TIMEFRAME3}{character, (optional) second subannual level of timeframes}
\item{...}{character, (optional) further subannual levels of timeframes}
\item{slice}{character, name of the time-slices used in sets to refer to the lowest level of timeframes. If not specified, will be auto-created with the formula: \verb{\{SLICE2\}_\{SLICE3\}...}}
}}

\item{\code{year_fraction}}{numeric, the fraction of a year covered by the calendar, e.g. 1 for annual calendar (default), 0.5 for semi-annual, 0.25 for quarterly, etc. If not specified, will be calculated as sum of \code{timetable$share} or used default value (1).}

\item{\code{slice_share}}{two column data.frame with slices from all levels
with their individual share in a year.}

\item{\code{default_timeframe}}{character, the name of the default level of the time-slices used in the model.}

\item{\code{timeframe_rank}}{named character vector with ranks of the timeframes.}

\item{\code{slices_in_frame}}{(!!! to depreciate)}

\item{\code{slice_family}}{data.frame mapping "parent" to "child" slices in two nearest timeframes in the nested hierarchy. Autocalculated based on the \verb{@timetable}.}

\item{\code{next_in_timeframe}}{data.frame mapping chronological sequence between time-slices in the same timeframe. The first timeslice folows the last in the same timeframe. Autocalculated based on the \verb{@timetable}.}

\item{\code{next_in_year}}{data.frame mapping chronological sequence between time-slices in the same timeframe through the whole year. Autocalculated based on the \verb{@timetable}.}

\item{\code{misc}}{list with additional data and calculated mappings.}
}}

\examples{
newCalendar()
make_timetable()
make_timetable(list("SEASON" = c("WINTER", "SUMMER")))
make_timetable(list("SEASON" = c("WINTER" = .6, "SUMMER" = .4)))
make_timetable(list(
  "SEASON" = list(
    "WINTER" = list(.3, DAY = c("MORNING", "EVENING")),
    "SUMMER" = list(.7, DAY = c("MORNING", "EVENING"))
  )
))

make_timetable(list(
  "SEASON" = list("WINTER" = .3, "SUMMER" = .7),
  "DAY" = c("MORNING", "EVENING")
))

}
