[{"path":"https://energyRt.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Oleg Lugovoy. Author, maintainer. Vladimir Potashnikov. Author. Tarun Sharma. Contributor.","code":""},{"path":"https://energyRt.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lugovoy O, Potashnikov V (2024). energyRt: Energy systems modeling toolbox R, development (alpha) version. R package version 0.49.0.9000, https://github.com/energyRt/energyRt, https://energyRt.org.","code":"@Manual{,   title = {energyRt: Energy systems modeling toolbox in R, development (alpha) version},   author = {Oleg Lugovoy and Vladimir Potashnikov},   year = {2024},   note = {R package version 0.49.0.9000, https://github.com/energyRt/energyRt},   url = {https://energyRt.org}, }"},{"path":"https://energyRt.org/index.html","id":"energyrt-energy-systems-modeling-toolbox-in-r","dir":"","previous_headings":"","what":"energyRt: energy systems modeling toolbox in R","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"documentation progress.","code":""},{"path":"https://energyRt.org/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package:","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"stable version (models built Aug-2023):remotes::install_github(\"energyRt/energyRt\") development (consistent ‘stable’, current models):remotes::install_github(\"energyRt/energyRt\", ref = \"dev\") ⚠️ WarningenergyRt currently preparation first release publication CRAN. Names, behavior, meaning functions, methods, parameters reviewed may changed order improve readability transparency code, consistency libraries, functionality features final product. Thanks testing patience. Please report bugs, issues suggest improvements : https://github.com/energyRt/energyRt/issues energyRt package R develop Reference Energy System (RES) models (also known Capacity Expansion Models (CEM), “Bottom-” technological energy models), analyze energy-technologies. energyRt package provides tools formulate main “bricks” energy system model R, solve model one mainstream mathematical programming languages: * GAMS, * GLPK/Mathprog, * Python/Pyomo, * Julia/JuMP. RES/CEM model similarities TIMES/MARKAL, OSeMOSYS, specifics, f.. definition technologies. energyRt package set classes, methods, functions R designed : - handle data, assist defining RES models, - helps analyze data, check errors bugs parsing solver, - parses dataset GAMS GLPK Python/Pyomo Julia/JuMP runs solve model, - reads solution imports results back R, - assists analysis results reporting.","code":""},{"path":"https://energyRt.org/index.html","id":"motivation","dir":"","previous_headings":"Installing the package:","what":"Motivation","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"minimize time development application RES/BottomUp models, boost learning curve energy modeling, improve transparency understanding energy models, use power open-source improve energy models application, making reproducible research (see [Reproducible Research R R Studio] (https://github.com/christophergandrud/Rep-Res-Book) @christophergandrud /[Dynamic Documents R knitr] (https://github.com/yihui/knitr-book) @yihui) accessible RES-modeling, integration models software.","code":""},{"path":"https://energyRt.org/index.html","id":"development-status","dir":"","previous_headings":"Installing the package:","what":"Development status","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"current functionality allows development multi-regional RES models basic well advanced level complexity, including multiple regions, exogenous endogenous interregional trade routes (example, electricity grid), multilevel/nested time-slices, well flexible definition technologies, storages. package documentation development. now, best way test functionality package check fully functional examples model (see Examples bellow).","code":""},{"path":[]},{"path":[]},{"path":"https://energyRt.org/index.html","id":"r-and-rstudio","dir":"","previous_headings":"Installation > Prerequisites","what":"R and RStudio","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"Assuming R already installed (, please download install https://www.r-project.org/), also recommend RStudio (https://www.rstudio.com/), powerful IDE (Integrated Development Environment) R. simplifies usage R, provides number features reproducible research (integration Markdown, Sweave), integration version control (github, svn).","code":""},{"path":"https://energyRt.org/index.html","id":"gams-or-glpk-or-python-or-julia-to-solve-the-model","dir":"","previous_headings":"Installation > Prerequisites","what":"GAMS or GLPK or Python or Julia to solve the model","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"cost-minimising linear programming model (set equation LP problem), emboddied energyRt package requires additional software solve . Currently energyRt model code written several languages GAMS, GLPK, Python/Pyomo, Julia/Jump. least one required solve model. General Algebraic Modeling System (GAMS, http://gams.com/) powerful proprietary modeling system. Suitable LP solvers: CBC (included basic GAMS version, powerful open source solver) CPLEX. Others LP solvers tested, may work well. GAMS path also added environmental variables operating system. GLPK open source Linear Programming Kit includes powerful LP MIP solver, basic language creating mathematical programming models (Mathprog GMPL – details see https://en.wikibooks.org/wiki/GLPK/GMPL_%28MathProg%29) GLPK/GMPL open source alternative GAMS, LP MIP problems. GLPK/GMPL bit slower GAMS small models, significantly slower large models, partially slower Mathprog (GMPL) language processor.","code":""},{"path":"https://energyRt.org/index.html","id":"installing-glpk-on-pcwindows-systems","dir":"","previous_headings":"Installation > Prerequisites > GAMS or GLPK or Python or Julia to solve the model","what":"Installing GLPK on PC/Windows systems","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"Download GLPK binaries Windows: https://sourceforge.net/projects/winglpk/ Follow installation instructions, add path Windows environment variables.","code":""},{"path":"https://energyRt.org/index.html","id":"installing-glpk-on-mac-systems","dir":"","previous_headings":"Installation > Prerequisites > GAMS or GLPK or Python or Julia to solve the model","what":"Installing GLPK on Mac systems","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"can install GLPK Mac using Homebrew MacPorts: brew install glpk sudo port install glpk Response glpsol indicator successful installation. See: http://brew.sh/ https://github.com/Homebrew/homebrew-science details.","code":""},{"path":"https://energyRt.org/index.html","id":"installing-pythompyomo","dir":"","previous_headings":"Installation > Prerequisites > GAMS or GLPK or Python or Julia to solve the model","what":"Installing Pythom/Pyomo","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"Please folow one standard procedures install Python, make available system’s terminal/cmd, install Pyomo package LP solver(s). CPLEX Gurobi recommended large scale models.","code":""},{"path":"https://energyRt.org/index.html","id":"installing-juliajump","dir":"","previous_headings":"Installation > Prerequisites > GAMS or GLPK or Python or Julia to solve the model","what":"Installing Julia/JuMP","title":"Energy systems modeling toolbox in R, development (alpha) version","text":"Similarly, follow standard procedure installing Julia JuMP package, well solvers links solvers. Currently Julia/JuMP version energyRt suitable small-scale models recommended testing , code large-scale models progress.","code":""},{"path":"https://energyRt.org/reference/add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an object to the model's repository — add,repository-method","title":"Add an object to the model's repository — add,repository-method","text":"Add object model's repository","code":""},{"path":"https://energyRt.org/reference/add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an object to the model's repository — add,repository-method","text":"","code":"# S4 method for class 'repository' add(obj, ..., overwrite = FALSE)  # S4 method for class 'model' add(obj, ..., overwrite = FALSE, repo_name = NULL)  # S4 method for class 'scenario' add(obj, ..., overwrite = FALSE, repo_name = NULL)"},{"path":"https://energyRt.org/reference/add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an object to the model's repository — add,repository-method","text":"obj model objuect ... model elements, allowed classess: ... overwrite logical, TRUE, objects name overwritten, error reported FALSE repo_name character, optional name (sub-)repository add object.","code":""},{"path":[]},{"path":"https://energyRt.org/reference/calendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a new calendar object from — newCalendar","title":"Generate a new calendar object from — newCalendar","text":"Sub-annual time resolution represented nested, named time-frames time-slices.","code":""},{"path":"https://energyRt.org/reference/calendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a new calendar object from — newCalendar","text":"","code":"newCalendar(timetable = NULL, year_fraction = 1, ...)  make_timetable(   struct = list(ANNUAL = \"ANNUAL\"),   year_fraction = 1,   warn = FALSE )"},{"path":"https://energyRt.org/reference/calendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a new calendar object from — newCalendar","text":"timetable data.frame calendar structure. year_fraction numeric scalar, used validation calculation (missing) `share` column given `timetable`. default value `1L` meaning sum shares slices table equal one (year). Lower one value indicates calendar represents full year. Assigning parameter `NULL` drop validation. ... optional `name`, `desc`, strings, character `default_timeframe`, list `misc` relevant content. arguments ignored. struct named list timeframes sets timeslices optional shares every slice frame nest warn logical, TRUE, warning issued `ANNUAL` level exists given structure. level auto-created complete time-structure.","code":""},{"path":"https://energyRt.org/reference/calendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a new calendar object from — newCalendar","text":"object class `calendar` specified structure. data.frame specified structure.","code":""},{"path":"https://energyRt.org/reference/calendar.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Generate a new calendar object from — newCalendar","text":"name character, (optional) name calendar references desc character, (optional) description calendar timeframes named list nested sub-annual levels vectors individual elements. timetable data.frame levels timeframes named columns, number rows equal total number time-slices lowest level. Every timeframe set timeslices (\"slices\") - named fragment time year-share. Timeframes nested structure. Though every slice may different sub-slices (similar real-world calendar). ANNUAL character, annual, top level timeframes TIMEFRAME2 character, (optional) first subannual level timeframes TIMEFRAME3 character, (optional) second subannual level timeframes ... character, (optional) subannual levels timeframes slice character, name time-slices used sets refer lowest level timeframes. specified, auto-created formula: `SLICE2_SLICE3...` year_fraction numeric, fraction year covered calendar, e.g. 1 annual calendar (default), 0.5 semi-annual, 0.25 quarterly, etc. specified, calculated sum `timetable$share` used default value (1). slice_share two column data.frame slices levels individual share year. default_timeframe character, name default level time-slices used model. timeframe_rank named character vector ranks timeframes. slices_in_frame (!!! depreciate) slice_family data.frame mapping \"parent\" \"child\" slices two nearest timeframes nested hierarchy. Autocalculated based `@timetable`. next_in_timeframe data.frame mapping chronological sequence time-slices timeframe. first timeslice folows last timeframe. Autocalculated based `@timetable`. next_in_year data.frame mapping chronological sequence time-slices timeframe whole year. Autocalculated based `@timetable`. misc list additional data calculated mappings.","code":""},{"path":"https://energyRt.org/reference/calendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a new calendar object from — newCalendar","text":"","code":"newCalendar() #> An object of class \"calendar\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> character(0) #>  #> Slot \"timeframes\": #> $ANNUAL #> [1] \"ANNUAL\" #>  #>  #> Slot \"year_fraction\": #> [1] 1 #>  #> Slot \"timetable\": #>    ANNUAL  slice share weight #>    <char> <char> <num>  <num> #> 1: ANNUAL ANNUAL     1      1 #>  #> Slot \"slice_share\": #>     slice share weight #>    <char> <num>  <num> #> 1: ANNUAL     1      1 #>  #> Slot \"default_timeframe\": #> [1] \"ANNUAL\" #>  #> Slot \"timeframe_rank\": #> ANNUAL  #>      1  #>  #> Slot \"slices_in_frame\": #> ANNUAL  #>      1  #>  #> Slot \"slice_family\": #> Empty data.table (0 rows and 2 cols): parent,child #>  #> Slot \"slice_ancestry\": #> Empty data.table (0 rows and 2 cols): parent,child #>  #> Slot \"next_in_timeframe\": #> Empty data.table (0 rows and 2 cols): slice,slicep #>  #> Slot \"next_in_year\": #> Empty data.table (0 rows and 2 cols): slice,slicep #>  #> Slot \"misc\": #> list() #>  make_timetable() #>    ANNUAL  slice share weight #>    <char> <char> <num>  <num> #> 1: ANNUAL ANNUAL     1      1 make_timetable(list(\"SEASON\" = c(\"WINTER\", \"SUMMER\"))) #>    ANNUAL SEASON  slice share weight #>    <char> <char> <char> <num>  <num> #> 1: ANNUAL SUMMER SUMMER   0.5      1 #> 2: ANNUAL WINTER WINTER   0.5      1 make_timetable(list(\"SEASON\" = c(\"WINTER\" = .6, \"SUMMER\" = .4))) #>    ANNUAL SEASON  slice share weight #>    <char> <char> <char> <num>  <num> #> 1: ANNUAL SUMMER SUMMER   0.4      1 #> 2: ANNUAL WINTER WINTER   0.6      1 make_timetable(list(   \"SEASON\" = list(     \"WINTER\" = list(.3, DAY = c(\"MORNING\", \"EVENING\")),     \"SUMMER\" = list(.7, DAY = c(\"MORNING\", \"EVENING\"))   ) )) #>    ANNUAL SEASON     DAY          slice share weight #>    <char> <char>  <char>         <char> <num>  <num> #> 1: ANNUAL SUMMER EVENING SUMMER_EVENING  0.35      1 #> 2: ANNUAL SUMMER MORNING SUMMER_MORNING  0.35      1 #> 3: ANNUAL WINTER EVENING WINTER_EVENING  0.15      1 #> 4: ANNUAL WINTER MORNING WINTER_MORNING  0.15      1  make_timetable(list(   \"SEASON\" = list(\"WINTER\" = .3, \"SUMMER\" = .7),   \"DAY\" = c(\"MORNING\", \"EVENING\") )) #>    ANNUAL SEASON     DAY          slice share weight #>    <char> <char>  <char>         <char> <num>  <num> #> 1: ANNUAL SUMMER EVENING SUMMER_EVENING  0.35      1 #> 2: ANNUAL SUMMER MORNING SUMMER_MORNING  0.35      1 #> 3: ANNUAL WINTER EVENING WINTER_EVENING  0.15      1 #> 4: ANNUAL WINTER MORNING WINTER_MORNING  0.15      1"},{"path":"https://energyRt.org/reference/check_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of object names — check_name","title":"Check validity of object names — check_name","text":"Check validity object names","code":""},{"path":"https://energyRt.org/reference/check_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of object names — check_name","text":"","code":"check_name(x)"},{"path":"https://energyRt.org/reference/check_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of object names — check_name","text":"x character, name object `energyRt`","code":""},{"path":"https://energyRt.org/reference/check_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of object names — check_name","text":"logical, TRUE name valid.","code":""},{"path":"https://energyRt.org/reference/commodity.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent a commodity — commodity-class","title":"An S4 class to represent a commodity — commodity-class","text":"S4 class represent commodity Create class commodity","code":""},{"path":"https://energyRt.org/reference/commodity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 class to represent a commodity — commodity-class","text":"","code":"newCommodity(   name = \"\",   desc = \"\",   limtype = \"LO\",   timeframe = character(),   unit = character(),   agg = data.frame(),   emis = data.frame(),   misc = list() )"},{"path":"https://energyRt.org/reference/commodity.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent a commodity — commodity-class","text":"name character, short name used sets, white spaces special characters limtype, character factor, limit type commodity balance equation (\"LO\" default, meaning level commodity model satisfied lower bound) timeframe character, default time-frame commodity operates model (lowest timeframe used default) unit main unit commodity used model, character string emis data.frame emissions factors, columns: comm character string, name commodity unit character string, unit emission factor emis numeric, emission factor, applied consumed commodity (`@name`) technology combustion parameter > 0, calculate emissions commodity specified slot (`@emis$comm`). agg data.frame aggregation parameters several commodities `@name` commodity, columns: comm character string, name commodity aggregated unit numeric, unit commodity aggregated agg numeric, aggregation parameter, applied commodity specified slot (`@agg$comm`) calculate `@name` commodity. misc list miscellaneous information store desc","code":""},{"path":"https://energyRt.org/reference/commodity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 class to represent a commodity — commodity-class","text":"","code":"newCommodity(name = \"ELC\", desc = \"Electricity\") #> An object of class \"commodity\" #> Slot \"name\": #> [1] \"ELC\" #>  #> Slot \"desc\": #> [1] \"\" #>  #> Slot \"limtype\": #> [1] LO #> Levels: FX UP LO #>  #> Slot \"timeframe\": #> character(0) #>  #> Slot \"unit\": #> character(0) #>  #> Slot \"emis\": #> [1] comm unit emis #> <0 rows> (or 0-length row.names) #>  #> Slot \"agg\": #> [1] comm unit agg  #> <0 rows> (or 0-length row.names) #>  #> Slot \"misc\": #> list() #>"},{"path":"https://energyRt.org/reference/config-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class (S4) to represent default model configuration. — config-class","title":"Class (S4) to represent default model configuration. — config-class","text":"Class (S4) represent default model configuration.","code":""},{"path":"https://energyRt.org/reference/config-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class (S4) to represent default model configuration. — config-class","text":"desc character string configuration information. region character coma separated string region names model horizon class horizon model time parameters discount data frame discount rates region year discountFirstYear logical, TRUE, discounting starts beginning year optimizeRetirement currently ignored defVal data.frame default values parameters (energyRt:::.defVal) interpolation data.frame interpolation rules (energyRt:::.defInt) debug data.frame define artificial (dummy) variables debug model infeasibility misc list miscelaneous data store object.","code":""},{"path":"https://energyRt.org/reference/constraint-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'constraint' — constraint-class","title":"Class 'constraint' — constraint-class","text":"Class 'constraint'","code":""},{"path":"https://energyRt.org/reference/constraint-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'constraint' — constraint-class","text":"name character. Name constrain object (used GAMS, GLPK, etc. element sets). desc character. Description constraint. eq factor. Type relation ('==' default, '<=', '>='). .list. List sets constraint created. rhs data.frame. List data frame numeric values constraint. defVal numeric. default value rhs. interpolation character, interpolation rule constraint. Recognized values, combination \"back\", \"inter\", \"forth\", indicating direction interpolation. default value \"inter\". lhs list. List summands left-hand side equation. slot created automatically unnamed arguments passed `newConstraint` function. misc list. List additional information parameters store constraint object.","code":""},{"path":"https://energyRt.org/reference/convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert units — convert,character-method","title":"Convert units — convert,character-method","text":"Convert units Add units convert function","code":""},{"path":"https://energyRt.org/reference/convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert units — convert,character-method","text":"","code":"# S4 method for class 'character' convert(from, to, x = 1, database = \"base\", ...)  # S4 method for class 'numeric' convert(x = 1, from, to, database = \"base\", ...)  # S4 method for class 'character,character,numeric' add_to_convert(   type,   unit,   coef,   alias = \"\",   SI_prefixes = FALSE,   database = \"base\",   update = TRUE )"},{"path":"https://energyRt.org/reference/convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert units — convert,character-method","text":"character length one unit name character length one unit name x numeric vector data convert database character name database units (`base` default, options implemented yet). ... currently ignored type character, type unit (one \"Energy\", \"Power\", \"Mass\", \"Time\", \"Length\", \"Area\", \"Pressure\", \"Density\", \"Volume\", \"Flow Rates\", \"Currency\"). unit character, name new unit add `database`. coef numeric, convert factor base unit type (see first column `convert_data[[database]][[type]]`). alias character vector, alternative name(s) unit. SI_prefixes logical, can used `SI` prefixes, FALSE default.","code":""},{"path":"https://energyRt.org/reference/convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert units — convert,character-method","text":"numeric vector converted values updated `convert_data` `.GlobalEnv`, values update package data.","code":""},{"path":[]},{"path":"https://energyRt.org/reference/convert_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic units conversion database for `convert` methods — convert_data","title":"Basic units conversion database for `convert` methods — convert_data","text":"Basic units conversion database `convert` methods","code":""},{"path":"https://energyRt.org/reference/convert_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic units conversion database for `convert` methods — convert_data","text":"","code":"convert_data"},{"path":"https://energyRt.org/reference/convert_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Basic units conversion database for `convert` methods — convert_data","text":"object class list length 1.","code":""},{"path":"https://energyRt.org/reference/costs-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'costs' — costs-class","title":"Class 'costs' — costs-class","text":"Class 'costs'","code":""},{"path":"https://energyRt.org/reference/costs-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'costs' — costs-class","text":"name character. desc character. variable character. subset data.frame. mult data.frame. misc list.","code":""},{"path":"https://energyRt.org/reference/demand.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to declare a demand in the model — newDemand","title":"An S4 class to declare a demand in the model — newDemand","text":"S4 class declare demand model","code":""},{"path":"https://energyRt.org/reference/demand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 class to declare a demand in the model — newDemand","text":"","code":"newDemand(   name = \"\",   desc = character(),   commodity = character(),   unit = character(),   dem = data.frame(),   region = character(),   misc = list() )"},{"path":"https://energyRt.org/reference/demand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 class to declare a demand in the model — newDemand","text":"demand object given specifications.","code":""},{"path":"https://energyRt.org/reference/demand.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to declare a demand in the model — newDemand","text":"name short name (character) used sets. desc optional desc, comment (character). commodity character. Name commodity demand specified. unit character. (optional) unit commodity. dem specification demand, data.frame columns: region character. Name region demand specified. NA every regions year integer. Year demand. NA every year. slice character. Name slice demand specified. NA every slice. dem numeric. Value demand. region character. Optional name region narrow specification demand case used NAs. Error returned specified regions `@dem` mensioned `@region` slot (slot empty). misc list. Optional list additional information.","code":""},{"path":"https://energyRt.org/reference/draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Schematic representation of technology — draw.technology","title":"Schematic representation of technology — draw.technology","text":"Schematic representation technology","code":""},{"path":"https://energyRt.org/reference/draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schematic representation of technology — draw.technology","text":"","code":"draw.technology(   tech,   year = NULL,   region = NULL,   slice = NULL,   ARROW_FONT = NULL,   CEX_GREFF = 0.65,   act_col = \"red3\",   aux_col = \"royalblue3\",   ncomb_col = \"seagreen3\",   bbcol1 = \"lightblue\",   bbcol2 = \"white\",   sng_lwd = 4,   grp_lwd = 2,   rule = new(\"config\")@interpolation,   defVal = new(\"config\")@defVal,   show_all = TRUE )"},{"path":"https://energyRt.org/reference/draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schematic representation of technology — draw.technology","text":"tech . show_all","code":""},{"path":"https://energyRt.org/reference/drop_na_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop columns in a data.frame with only NA values — drop_na_cols","title":"Drop columns in a data.frame with only NA values — drop_na_cols","text":"wrapper `dplyr` functions drop columns information (`NA` values)","code":""},{"path":"https://energyRt.org/reference/drop_na_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop columns in a data.frame with only NA values — drop_na_cols","text":"","code":"drop_na_cols(x, unique = TRUE)"},{"path":"https://energyRt.org/reference/drop_na_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop columns in a data.frame with only NA values — drop_na_cols","text":"x data.frame unique logical, TRUE (default), `unique()` function applied result.","code":""},{"path":"https://energyRt.org/reference/energyRt-package.html","id":null,"dir":"Reference","previous_headings":"","what":"energyRt: Energy systems modeling toolbox in R, development (alpha) version — energyRt-package","title":"energyRt: Energy systems modeling toolbox in R, development (alpha) version — energyRt-package","text":"Energy systems modeling toolbox R","code":""},{"path":[]},{"path":"https://energyRt.org/reference/energyRt-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"energyRt: Energy systems modeling toolbox in R, development (alpha) version — energyRt-package","text":"Maintainer: Oleg Lugovoy olugovoy@gmail.com Authors: Vladimir Potashnikov potashnikov.vu@gmail.com contributors: Tarun Sharma tarunsharma@ms.iitr.ac.[contributor]","code":""},{"path":"https://energyRt.org/reference/export-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent commodity export to the rest of the world. — export-class","title":"An S4 class to represent commodity export to the rest of the world. — export-class","text":"S4 class represent commodity export rest world.","code":""},{"path":"https://energyRt.org/reference/export-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent commodity export to the rest of the world. — export-class","text":"name character. Name export process (used sets). desc character. short description export process. commodity character. Name commodity. unit character. Unit exported commodity. reserve numeric. Constraints total accumulated (years) export resource (similar \"reserve\" supply). misc list. additional information store.","code":""},{"path":"https://energyRt.org/reference/findData.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs search for available data in _scenario_ object. — findData","title":"Performs search for available data in _scenario_ object. — findData","text":"Performs search available data _scenario_ object.","code":""},{"path":"https://energyRt.org/reference/findData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs search for available data in _scenario_ object. — findData","text":"","code":"findData(   scen,   dataType = c(\"parameters\", \"variables\"),   setsNames_ = NULL,   valueColumn = TRUE,   allSets = TRUE,   ignore.case = FALSE,   add_weights = \"auto\",   dropEmpty = TRUE,   dfDim = TRUE,   dfNames = TRUE,   asMatrix = FALSE )"},{"path":"https://energyRt.org/reference/findData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs search for available data in _scenario_ object. — findData","text":"scen object _scenario_ model solution. dataType type data lok (currently \"parameters\" \"variables\"). setsNames_ regular expression pattern names sets included search. valueColumn logical, TRUE return variables parameters 'value' column (filter sets mappings). allSets logical, TRUE _and_ operator used search sets, _or_ used FALSE. ignore.case grepl parameter matching names. dropEmpty logical, TRUE drops parameters variables zero length. dfDim logical, TRUE returns dimension _dim_. dfNames logical, TRUE returns names data frame column. asMatrix return results matrix (implemented).","code":""},{"path":"https://energyRt.org/reference/findData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs search for available data in _scenario_ object. — findData","text":"list variables parameters name, includes _dim_ _names_ character vectors.","code":""},{"path":"https://energyRt.org/reference/findDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to find duplicated values in interpolated scenario. — findDuplicates","title":"Function to find duplicated values in interpolated scenario. — findDuplicates","text":"Function find duplicated values interpolated scenario.","code":""},{"path":"https://energyRt.org/reference/findDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to find duplicated values in interpolated scenario. — findDuplicates","text":"","code":"findDuplicates(x)"},{"path":"https://energyRt.org/reference/findDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to find duplicated values in interpolated scenario. — findDuplicates","text":"x scenario data.frame data check.","code":""},{"path":"https://energyRt.org/reference/gams.html","id":null,"dir":"Reference","previous_headings":"","what":"Set GAMS and GDX library directory — set_gams_path","title":"Set GAMS and GDX library directory — set_gams_path","text":"(optional) function sets path GAMS directory R-options. might useful cases several different version (licenses) GAMS installed, easily switch . also possible set different path GAMS GAMS Data Exchange (GDX) libraries. GDX path set, GAMS path used. GAMS path set, default system GAMS-path (OS environment variables) instead.","code":""},{"path":"https://energyRt.org/reference/gams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set GAMS and GDX library directory — set_gams_path","text":"","code":"set_gams_path(path = NULL)  get_gams_path()  set_gdxlib_path(path = NULL)  get_gdxlib_path()"},{"path":"https://energyRt.org/reference/gams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set GAMS and GDX library directory — set_gams_path","text":"path character, path installed GAMS distribution use solve models /GDX library use reading writing gdx-files.","code":""},{"path":"https://energyRt.org/reference/gams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set GAMS and GDX library directory — set_gams_path","text":"","code":"# set_gams_path(\"C:/GAMS/win64/32.2/\")  # get_gams_path() # set_gdxlib(\"C:/GAMS/35\") # get_gdxlib()"},{"path":"https://energyRt.org/reference/getData.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts information from scenario objects, based on filters. — getData","title":"Extracts information from scenario objects, based on filters. — getData","text":"Extracts information scenario objects, based filters.","code":""},{"path":"https://energyRt.org/reference/getData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts information from scenario objects, based on filters. — getData","text":"","code":"getData(   scen,   name = NULL,   ...,   merge = FALSE,   process = FALSE,   parameters = TRUE,   variables = TRUE,   ignore.case = TRUE,   newNames = NULL,   newValues = NULL,   na.rm = FALSE,   digits = NULL,   drop.zeros = FALSE,   asTibble = TRUE,   stringsAsFactors = FALSE,   yearsAsFactors = FALSE,   drop_duplicated_scenarios = TRUE,   scenNameInList = as.logical(length(scen) - 1),   verbose = FALSE )  get_data(   scen,   name = NULL,   ...,   merge = FALSE,   process = FALSE,   parameters = TRUE,   variables = TRUE,   ignore.case = TRUE,   newNames = NULL,   newValues = NULL,   na.rm = FALSE,   digits = NULL,   drop.zeros = FALSE,   asTibble = TRUE,   stringsAsFactors = FALSE,   yearsAsFactors = FALSE,   drop_duplicated_scenarios = TRUE,   scenNameInList = as.logical(length(scen) - 1),   verbose = FALSE )"},{"path":"https://energyRt.org/reference/getData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts information from scenario objects, based on filters. — getData","text":"scen Object scenario list scenarios. name character vector names parameters /variables. ... filters various sets (setname = c(val1, val2) setname_ = \"matching pattern\"), see details. merge TRUE, search results merged one dataframe; named list returned FALSE. process TRUE, dimensions \"tech\", \"stg\", \"trade\", \"imp\", \"expp\", \"dem\", \"sup\" renamed \"process\". parameters TRUE, parameters included search returned found. variables TRUE, variables included search returned found. ignore.case grepl parameter regular expressions used '...' 'name_'. newNames renaming sets, named character vector list new names values, old names names - input parameter renameSets function. operation performed merging data (merge parameter). newValues revalue sets, named character vector list new values values, old values names - input parameter revalueSets function. operation performed merging data (merge parameter). na.rm TRUE, NA values dropped. digits integer, indicates number decimal places rounding, NULL - actions. drop.zeros logical, rows containing zero values filtered . asTibble logical, data.frames converted tibbles. stringsAsFactors logical, sets values converted factors? yearsAsFactors logical, `year` converted factors? Set 'year' integer default. scenNameInList logical, name scenarios used provided list several scenarios? verbose","code":""},{"path":"https://energyRt.org/reference/getData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts information from scenario objects, based on filters. — getData","text":"","code":"data(\"utopia_scen_BAU.RData\") #> Warning: data set 'utopia_scen_BAU.RData' not found getData(scen, name = \"pDemand\", year = 2015, merge = T) #> Error in eval(expr, envir, enclos): object 'scen' not found getData(scen, name = \"vTechOut\", comm = \"ELC\", merge = T, year = 2015) #> Error in eval(expr, envir, enclos): object 'scen' not found elc2050 <- getData(scen, parameters = FALSE, comm = \"ELC\", year = 2050) #> Error in eval(expr, envir, enclos): object 'scen' not found names(elc2050) #> Error in eval(expr, envir, enclos): object 'elc2050' not found elc2050$vBalance #> Error in eval(expr, envir, enclos): object 'elc2050' not found"},{"path":"https://energyRt.org/reference/get_registry.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the current registry object. — get_registry","title":"Returns the current registry object. — get_registry","text":"Returns current registry object.","code":""},{"path":"https://energyRt.org/reference/get_registry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the current registry object. — get_registry","text":"","code":"get_registry()"},{"path":"https://energyRt.org/reference/horizon.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent model/scenario planning horizon with intervals (year-steps) — horizon-class","title":"An S4 class to represent model/scenario planning horizon with intervals (year-steps) — horizon-class","text":"S4 class represent model/scenario planning horizon intervals (year-steps) Create new object class 'horizon'","code":""},{"path":"https://energyRt.org/reference/horizon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 class to represent model/scenario planning horizon with intervals (year-steps) — horizon-class","text":"","code":"newHorizon(   period = NULL,   intervals = NULL,   desc = NULL,   mid_is_end = FALSE,   mid_is_start = FALSE,   force_BY_interval_to_1_year = T,   name = NULL,   ... )"},{"path":"https://energyRt.org/reference/horizon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 class to represent model/scenario planning horizon with intervals (year-steps) — horizon-class","text":"period (optional) integer vector range sequence period; arranged, gaps filled. missing intervals (optional) data.frame integer vector. data.frame must `start`, `mid`, `end` columns modeled interval. vector considered lengths modeled interval period. desc character, comment description. force_BY_interval_to_1_year logical, TRUE (default), base-year (first) interval forced one year. ... ignored","code":""},{"path":"https://energyRt.org/reference/horizon.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent model/scenario planning horizon with intervals (year-steps) — horizon-class","text":"desc character, comment short description. period integer, planning period defined sequence years (arranged, without gaps) model planning (e.g. optimization) window. Data years planning `period` can present model-objects taken account interpolation model parameters. excluded optimization. intervals data.frame three columns, representing start, middle, end year every interval.","code":""},{"path":"https://energyRt.org/reference/horizon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 class to represent model/scenario planning horizon with intervals (year-steps) — horizon-class","text":"","code":"newHorizon(2020:2050) #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> character(0) #>  #> Slot \"period\": #>  [1] 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 #> [16] 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 2049 #> [31] 2050 #>  #> Slot \"intervals\": #>     start   mid   end #>     <int> <int> <int> #>  1:  2020  2020  2020 #>  2:  2021  2021  2021 #>  3:  2022  2022  2022 #>  4:  2023  2023  2023 #>  5:  2024  2024  2024 #>  6:  2025  2025  2025 #>  7:  2026  2026  2026 #>  8:  2027  2027  2027 #>  9:  2028  2028  2028 #> 10:  2029  2029  2029 #> 11:  2030  2030  2030 #> 12:  2031  2031  2031 #> 13:  2032  2032  2032 #> 14:  2033  2033  2033 #> 15:  2034  2034  2034 #> 16:  2035  2035  2035 #> 17:  2036  2036  2036 #> 18:  2037  2037  2037 #> 19:  2038  2038  2038 #> 20:  2039  2039  2039 #> 21:  2040  2040  2040 #> 22:  2041  2041  2041 #> 23:  2042  2042  2042 #> 24:  2043  2043  2043 #> 25:  2044  2044  2044 #> 26:  2045  2045  2045 #> 27:  2046  2046  2046 #> 28:  2047  2047  2047 #> 29:  2048  2048  2048 #> 30:  2049  2049  2049 #> 31:  2050  2050  2050 #>     start   mid   end #>  newHorizon(2020:2030, desc = \"One-year intervals\") #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> [1] \"One-year intervals\" #>  #> Slot \"period\": #>  [1] 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 #>  #> Slot \"intervals\": #>     start   mid   end #>     <int> <int> <int> #>  1:  2020  2020  2020 #>  2:  2021  2021  2021 #>  3:  2022  2022  2022 #>  4:  2023  2023  2023 #>  5:  2024  2024  2024 #>  6:  2025  2025  2025 #>  7:  2026  2026  2026 #>  8:  2027  2027  2027 #>  9:  2028  2028  2028 #> 10:  2029  2029  2029 #> 11:  2030  2030  2030 #>  newHorizon(2020:2030, c(1, 2, 5, 10), desc = \"Different length intervals\") #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> [1] \"Different length intervals\" #>  #> Slot \"period\": #>  [1] 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 #>  #> Slot \"intervals\": #>    start   mid   end #>    <num> <num> <num> #> 1:  2020  2020  2020 #> 2:  2021  2021  2022 #> 3:  2023  2025  2027 #> 4:  2028  2028  2030 #>  newHorizon(2020:2035, c(1, 2, 5, 5, 5)) #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> character(0) #>  #> Slot \"period\": #>  [1] 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 #> [16] 2035 #>  #> Slot \"intervals\": #>    start   mid   end #>    <num> <num> <num> #> 1:  2020  2020  2020 #> 2:  2021  2021  2022 #> 3:  2023  2025  2027 #> 4:  2028  2030  2032 #> 5:  2033  2033  2035 #>  newHorizon(2020:2050, c(1, 2, 5, 7, 1)) #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> character(0) #>  #> Slot \"period\": #>  [1] 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 #> [16] 2035 #>  #> Slot \"intervals\": #>    start   mid   end #>    <num> <num> <num> #> 1:  2020  2020  2020 #> 2:  2021  2021  2022 #> 3:  2023  2025  2027 #> 4:  2028  2031  2034 #> 5:  2035  2035  2035 #>  newHorizon(intervals = data.frame(   start = c(2030, 2031, 2034),   mid =   c(2030, 2032, 2037),   end =   c(2030, 2033, 2040)),   desc = \"Explicit assignment of intervals via data.frame\"   ) #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> [1] \"Explicit assignment of intervals via data.frame\" #>  #> Slot \"period\": #>  [1] 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 #>  #> Slot \"intervals\": #>    start   mid   end #>    <num> <num> <num> #> 1:  2030  2030  2030 #> 2:  2031  2032  2033 #> 3:  2034  2037  2040 #>   newHorizon(period = 2020:2050,            intervals = data.frame(              start = c(2030, 2031, 2034),              mid =   c(2030, 2032, 2037),              end =   c(2030, 2033, 2040)),              desc = \"The period will be trimmed to the scope of intervals\") #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> [1] \"The period will be trimmed to the scope of intervals\" #>  #> Slot \"period\": #>  [1] 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 #>  #> Slot \"intervals\": #>    start   mid   end #>    <num> <num> <num> #> 1:  2030  2030  2030 #> 2:  2031  2032  2033 #> 3:  2034  2037  2040 #>   newHorizon(2020:2050, c(3, 2, 5, 10),            desc = \"Pay attention to the length of the first interval\") #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> [1] \"Pay attention to the length of the first interval\" #>  #> Slot \"period\": #>  [1] 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 #> [16] 2035 2036 2037 2038 2039 #>  #> Slot \"intervals\": #>    start   mid   end #>    <num> <num> <num> #> 1:  2020  2020  2020 #> 2:  2021  2021  2022 #> 3:  2023  2023  2024 #> 4:  2025  2027  2029 #> 5:  2030  2034  2039 #>   newHorizon(period = 2020:2040,            intervals = data.frame(              start = c(2030, 2032, 2035),              mid =   c(2031, 2033, 2037),              end =   c(2032, 2034, 2040))) #> An object of class \"horizon\" #> Slot \"name\": #> character(0) #>  #> Slot \"desc\": #> character(0) #>  #> Slot \"period\": #>  [1] 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 #>  #> Slot \"intervals\": #>    start   mid   end #>    <int> <int> <int> #> 1:  2030  2030  2030 #> 2:  2031  2031  2032 #> 3:  2032  2033  2034 #> 4:  2035  2037  2040 #>"},{"path":"https://energyRt.org/reference/hour2HOUR.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert hours (integer) values to HOUR set 'hNN' — hour2HOUR","title":"Convert hours (integer) values to HOUR set 'hNN' — hour2HOUR","text":"Convert hours (integer) values HOUR set 'hNN'","code":""},{"path":"https://energyRt.org/reference/hour2HOUR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert hours (integer) values to HOUR set 'hNN' — hour2HOUR","text":"","code":"hour2HOUR(x, width = 2, prefix = \"h\", flag = \"0\")"},{"path":"https://energyRt.org/reference/hour2HOUR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert hours (integer) values to HOUR set 'hNN' — hour2HOUR","text":"flag","code":""},{"path":"https://energyRt.org/reference/import-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent commodity import from the rest of the world. — import-class","title":"An S4 class to represent commodity import from the rest of the world. — import-class","text":"S4 class represent commodity import rest world.","code":""},{"path":"https://energyRt.org/reference/import-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent commodity import from the rest of the world. — import-class","text":"name character. desc character. commodity character. unit character. reserve numeric. imp data.frame. misc list.","code":""},{"path":"https://energyRt.org/reference/interpolate-model-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate model — interpolate,model-method","title":"Interpolate model — interpolate,model-method","text":"Interpolate model","code":""},{"path":"https://energyRt.org/reference/interpolate-model-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate model — interpolate,model-method","text":"","code":"# S4 method for class 'model' interpolate(object, ...)"},{"path":"https://energyRt.org/reference/interpolate-model-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate model — interpolate,model-method","text":"object model scenario type object.","code":""},{"path":"https://energyRt.org/reference/interpolate-model-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate model — interpolate,model-method","text":"scenario object enclosed model (slot `@model`) interpolated parameters (slot `@modInp`).","code":""},{"path":"https://energyRt.org/reference/isInMemory.html","id":null,"dir":"Reference","previous_headings":"","what":"Is object stored in memory? — isInMemory","title":"Is object stored in memory? — isInMemory","text":"object stored memory?","code":""},{"path":"https://energyRt.org/reference/isInMemory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is object stored in memory? — isInMemory","text":"","code":"isInMemory(obj)"},{"path":"https://energyRt.org/reference/isInMemory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is object stored in memory? — isInMemory","text":"obj Object, checks","code":""},{"path":"https://energyRt.org/reference/load_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Load scenario (in progress) — load_scenario","title":"Load scenario (in progress) — load_scenario","text":"Load scenario (progress)","code":""},{"path":"https://energyRt.org/reference/load_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load scenario (in progress) — load_scenario","text":"","code":"load_scenario(   path,   name = NULL,   env = .scen,   overwrite = FALSE,   ignore_errors = FALSE,   verbose = TRUE )"},{"path":"https://energyRt.org/reference/load_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load scenario (in progress) — load_scenario","text":"verbose","code":""},{"path":"https://energyRt.org/reference/model-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class to represent model — model-class","title":"S4 class to represent model — model-class","text":"S4 class represent model","code":""},{"path":"https://energyRt.org/reference/model-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class to represent model — model-class","text":"name character. desc character. data list. config config. misc list.","code":""},{"path":"https://energyRt.org/reference/modInp-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent model input — modInp-class","title":"An S4 class to represent model input — modInp-class","text":"S4 class represent model input","code":""},{"path":"https://energyRt.org/reference/modInp-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent model input — modInp-class","text":"set list. parameters list. gams.equation list. costs.equation character misc list.","code":""},{"path":"https://energyRt.org/reference/modOut-class.html","id":null,"dir":"Reference","previous_headings":"","what":"modOut-class to store the output from the model (solution) — modOut-class","title":"modOut-class to store the output from the model (solution) — modOut-class","text":"modOut-class store output model (solution)","code":""},{"path":"https://energyRt.org/reference/modOut-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"modOut-class to store the output from the model (solution) — modOut-class","text":"sets list. variables list. stage character. # !!! move scenario-status solutionLogs data.frame. misc list.","code":""},{"path":"https://energyRt.org/reference/newConstraint.html","id":null,"dir":"Reference","previous_headings":"","what":"Create (equality or inequality) constraint object — newConstraint","title":"Create (equality or inequality) constraint object — newConstraint","text":"Create (equality inequality) constraint object","code":""},{"path":"https://energyRt.org/reference/newConstraint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create (equality or inequality) constraint object — newConstraint","text":"","code":"newConstraint(   name,   ...,   eq = \"==\",   rhs = data.frame(),   for.each = NULL,   defVal = NULL,   interpolation = \"inter\",   replace_zerros = 1e-20,   arg = NULL )"},{"path":"https://energyRt.org/reference/newConstraint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create (equality or inequality) constraint object — newConstraint","text":"name Name constrain object (used GAMS GLPK element sets) ... Left-hand side (LHS) terms statement - list objects eq Type relation ('==' default, '<=', '>=') rhs numeric value, list data frame sets numeric values constraint. Warning: zero values replaced `1e-20` avoid ignoring current interpolation algorithms. .list sets constraint created. defVal default value `rhs`. interpolation interpolation rule constraint. Recognized values, combination \"back\", \"inter\", \"forth\", indicating direction interpolation. default value \"inter\". arg tbc","code":""},{"path":"https://energyRt.org/reference/newConstraint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create (equality or inequality) constraint object — newConstraint","text":"Object class `constraint`.","code":""},{"path":"https://energyRt.org/reference/newExport.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new export object — newExport","title":"Create new export object — newExport","text":"Create new export object","code":""},{"path":"https://energyRt.org/reference/newExport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new export object — newExport","text":"","code":"newExport(   name,   desc = \"\",   commodity = \"\",   unit = NULL,   reserve = Inf,   exp = data.frame(),   ... )"},{"path":"https://energyRt.org/reference/newImport.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new export object — newImport","title":"Create new export object — newImport","text":"Create new export object","code":""},{"path":"https://energyRt.org/reference/newImport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new export object — newImport","text":"","code":"newImport(   name,   desc = \"\",   commodity = \"\",   unit = NULL,   reserve = Inf,   imp = data.frame(),   ... )"},{"path":"https://energyRt.org/reference/newImport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new export object — newImport","text":"name character name object (used sets) desc optional character description commodity character name import commodity unit character name unit commodity reserve numeric, total accumulated limit model horizon imp data frame import parameters","code":""},{"path":"https://energyRt.org/reference/newModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new model object — newModel","title":"Create new model object — newModel","text":"Create new model object","code":""},{"path":"https://energyRt.org/reference/newModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new model object — newModel","text":"","code":"newModel(name = \"\", desc = \"\", ...)  # S4 method for class 'model' setHorizon(obj, ...)  # S4 method for class 'model' getHorizon(obj)"},{"path":"https://energyRt.org/reference/newModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new model object — newModel","text":"name name model ... configuration parameters (see class config) model elements (classes commodity, technology, etc.)","code":""},{"path":"https://energyRt.org/reference/newRegistry.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new registry object. — newRegistry","title":"Create a new registry object. — newRegistry","text":"Create new registry object.","code":""},{"path":"https://energyRt.org/reference/newRegistry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new registry object. — newRegistry","text":"","code":"newRegistry(   class = c(\"scenario\", \"model\", \"repository\"),   name = NULL,   registry_env = \".GlobalEnv\",   store_env = \".scen\" )"},{"path":"https://energyRt.org/reference/newRegistry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new registry object. — newRegistry","text":"class character, type classes stored registry. name character, name registry object. registry_env character, environment store registry object. store_env character, environment store objects.","code":""},{"path":"https://energyRt.org/reference/newRepository.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new repository object — newRepository","title":"Create new repository object — newRepository","text":"Create new repository object","code":""},{"path":"https://energyRt.org/reference/newRepository.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new repository object — newRepository","text":"","code":"newRepository(name = \"default_repository\", ...)"},{"path":"https://energyRt.org/reference/newRepository.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new repository object — newRepository","text":"name character,","code":""},{"path":[]},{"path":"https://energyRt.org/reference/newScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a new scenario object — newScenario","title":"Generate a new scenario object — newScenario","text":"Generate new scenario object","code":""},{"path":"https://energyRt.org/reference/newScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a new scenario object — newScenario","text":"","code":"newScenario(   name,   model = NULL,   path = file.path(get_scenarios_path(), name),   ...,   env_name = \".scen\",   registry = get_registry(),   replace = FALSE )"},{"path":"https://energyRt.org/reference/newScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a new scenario object — newScenario","text":"name character. Name scenario. path character. Path scenario directory. ...  env_name name environment assign scenario . registry optional registry object register scenario. replace logical. TRUE, replace entry scenario registry entry already exists.","code":""},{"path":"https://energyRt.org/reference/newWeather.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — newWeather","title":"Title — newWeather","text":"Title","code":""},{"path":"https://energyRt.org/reference/newWeather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — newWeather","text":"","code":"newWeather(   name = \"\",   desc = \"\",   unit = as.character(NA),   region = character(),   timeframe = character(),   defVal = 0,   weather = data.frame(),   ... )"},{"path":"https://energyRt.org/reference/newWeather.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — newWeather","text":"...","code":""},{"path":"https://energyRt.org/reference/obj2mem.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads objects from disk to memory — obj2mem","title":"Loads objects from disk to memory — obj2mem","text":"Loads objects disk memory","code":""},{"path":"https://energyRt.org/reference/obj2mem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads objects from disk to memory — obj2mem","text":"","code":"obj2mem(obj, verbose = TRUE)"},{"path":"https://energyRt.org/reference/obj2mem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads objects from disk to memory — obj2mem","text":"obj Object S4 class, saved disk (scenario, model, etc.) verbose TRUE, prints messages","code":""},{"path":"https://energyRt.org/reference/options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get directory for/with scenarios — set_scenarios_path","title":"Set or get directory for/with scenarios — set_scenarios_path","text":"Set get directory /scenarios","code":""},{"path":"https://energyRt.org/reference/options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get directory for/with scenarios — set_scenarios_path","text":"","code":"set_scenarios_path(path = NULL)  get_scenarios_path()"},{"path":"https://energyRt.org/reference/options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get directory for/with scenarios — set_scenarios_path","text":"path","code":""},{"path":"https://energyRt.org/reference/parameter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to specify the model set or parameter — parameter-class","title":"An S4 class to specify the model set or parameter — parameter-class","text":"S4 class specify model set parameter","code":""},{"path":"https://energyRt.org/reference/parameter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to specify the model set or parameter — parameter-class","text":"name character. desc character. dimSets character. type factor, defVal numeric. interpolation character. data data.frame. misc list.","code":""},{"path":"https://energyRt.org/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://energyRt.org/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://energyRt.org/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://energyRt.org/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://energyRt.org/reference/progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch on/off and select/customize progress bar — set_progress_bar","title":"Switch on/off and select/customize progress bar — set_progress_bar","text":"Switch /select/customize progress bar","code":""},{"path":"https://energyRt.org/reference/progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch on/off and select/customize progress bar — set_progress_bar","text":"","code":"set_progress_bar(type = \"bw\", show = TRUE, clear = FALSE)  show_progress_bar(show = TRUE)"},{"path":"https://energyRt.org/reference/progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch on/off and select/customize progress bar — set_progress_bar","text":"type character, type progress bar display. Existing options: \"bw\", \"default\", \"cli\", \"progress\". show logical, progress bar visible `TRUE`. clear logical, sets `progressr.clear` global option. `TRUE`, outout progress bar cleared.","code":""},{"path":"https://energyRt.org/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read solution — read_solution","title":"Read solution — read_solution","text":"function method read outputs solved model/scenario return scenario object populated variables data.","code":""},{"path":"https://energyRt.org/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read solution — read_solution","text":"","code":"read_solution(obj, ...)  # S4 method for class 'scenario' read(obj, ...)"},{"path":"https://energyRt.org/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read solution — read_solution","text":"obj scenario object ... optional tmp.dir (missing scenario object replace saved path)","code":""},{"path":[]},{"path":"https://energyRt.org/reference/register.html","id":null,"dir":"Reference","previous_headings":"","what":"Register an object in the registry. — register","title":"Register an object in the registry. — register","text":"Register object registry.","code":""},{"path":"https://energyRt.org/reference/register.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register an object in the registry. — register","text":"","code":"register(   obj,   registry,   name = obj@name,   project = \"\",   path = \"\",   memo = \"\",   datetime = lubridate::now(tzone = \"UTC\"),   user = Sys.info()[\"user\"],   system = Sys.info()[\"sysname\"],   ...,   env = obj@misc$env,   replace = FALSE )"},{"path":"https://energyRt.org/reference/register.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register an object in the registry. — register","text":"obj object registered. registry registry object add entry. name character, name object. project character, optional, name project. path character, optional path object's 'onDisk' directory. memo character, optional short note object. datetime timestamp, optional, date time registration. user character, optional, user registered object. system character, optional, system object registered. ... (reserved future use). env character, environment object stored. replace logical, TRUE, replace existing entry.","code":""},{"path":"https://energyRt.org/reference/renameSets.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename data.frame columns of list of data.frames. — renameSets","title":"Rename data.frame columns of list of data.frames. — renameSets","text":"Rename data.frame columns list data.frames.","code":""},{"path":"https://energyRt.org/reference/renameSets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename data.frame columns of list of data.frames. — renameSets","text":"","code":"renameSets(x, newNames = NULL)"},{"path":"https://energyRt.org/reference/renameSets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename data.frame columns of list of data.frames. — renameSets","text":"x data.frame list data frames. newNames named character vector list new names values, old names names.","code":""},{"path":"https://energyRt.org/reference/renameSets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename data.frame columns of list of data.frames. — renameSets","text":"depending input, renamed data.frame list renamed data.frames.","code":""},{"path":"https://energyRt.org/reference/renameSets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename data.frame columns of list of data.frames. — renameSets","text":"","code":"if (FALSE) { # \\dontrun{ x <- data.frame(a = letters, n = 1:length(letters)) x renameSets(x[1:3, ], c(a = \"A\", n = \"N\")) renameSets(x[1:3, ], list(a = \"B\", n = \"M\")) } # }"},{"path":"https://energyRt.org/reference/repository-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to store the model objects. — repository-class","title":"An S4 class to store the model objects. — repository-class","text":"S4 class store model objects.","code":""},{"path":"https://energyRt.org/reference/repository-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to store the model objects. — repository-class","text":"name character. Name repository. desc character, short desc purpose content repository. data list repositories objects permitted classes. names objects (`object@name`) must unique. permit character vector names classes permitted store repository. misc list, additional data information store object.","code":""},{"path":[]},{"path":"https://energyRt.org/reference/revalueSets.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace specified values with new values in factor or character columns of a data.frame. — revalueSets","title":"Replace specified values with new values in factor or character columns of a data.frame. — revalueSets","text":"Replace specified values new values factor character columns data.frame.","code":""},{"path":"https://energyRt.org/reference/revalueSets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace specified values with new values in factor or character columns of a data.frame. — revalueSets","text":"","code":"revalueSets(x, newValues = NULL)"},{"path":"https://energyRt.org/reference/revalueSets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace specified values with new values in factor or character columns of a data.frame. — revalueSets","text":"x vector newValues names list named vectors. names list equal names data.frame columns wich values replaced. named vector new names values old values names.","code":""},{"path":"https://energyRt.org/reference/revalueSets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace specified values with new values in factor or character columns of a data.frame. — revalueSets","text":"x data.frame revalued variables.","code":""},{"path":"https://energyRt.org/reference/revalueSets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace specified values with new values in factor or character columns of a data.frame. — revalueSets","text":"","code":"if (FALSE) { # \\dontrun{ x <- data.frame(a = letters, n = 1:length(letters)) nw1 <- LETTERS[1:10] names(nw1) <- letters[1:10] nw2 <- formatC(1:9, width = 3, flag = \"0\") names(nw2) <- 1:9 newValues <- list(a = nw1, n = nw2) newValues revalueSets(x, newValues) } # }"},{"path":"https://energyRt.org/reference/save_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Save scenario object on disk in parquet format using `arrow` package. — save_scenario","title":"Save scenario object on disk in parquet format using `arrow` package. — save_scenario","text":"Save scenario object disk parquet format using `arrow` package.","code":""},{"path":"https://energyRt.org/reference/save_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save scenario object on disk in parquet format using `arrow` package. — save_scenario","text":"","code":"save_scenario(   scen,   path = scen@path,   format = \"parquet\",   overwrite = TRUE,   clean_start = FALSE,   write_log = TRUE,   verbose = TRUE )"},{"path":"https://energyRt.org/reference/save_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save scenario object on disk in parquet format using `arrow` package. — save_scenario","text":"scen scenario object. path character. Path scenario directory. format file format (currently `parquet` , arrow feather implemented releases). overwrite logical. Overwrite existing scenario directory. clean_start logical. Clean scenario directory saving. write_log logical. Write (update) logfile. verbose logical. Print messages.","code":""},{"path":"https://energyRt.org/reference/save_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save scenario object on disk in parquet format using `arrow` package. — save_scenario","text":"scenario object slots saved disk.","code":""},{"path":"https://energyRt.org/reference/scenario-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent scenario, an interpolated and/or solved model. — scenario-class","title":"An S4 class to represent scenario, an interpolated and/or solved model. — scenario-class","text":"S4 class represent scenario, interpolated /solved model.","code":""},{"path":"https://energyRt.org/reference/scenario-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent scenario, an interpolated and/or solved model. — scenario-class","text":"name character. Name scenario. desc character. Description scenario. model model. Model object. settings settings. modInp modInp object. modOut modOut. status list. misc list. name  desc  model  inMemory  path","code":""},{"path":"https://energyRt.org/reference/settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent scenario settings — settings-class","title":"An S4 class to represent scenario settings — settings-class","text":"S4 class represent scenario settings","code":""},{"path":"https://energyRt.org/reference/settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent scenario settings — settings-class","text":"subset list. solver list. sourceCode list. yearFraction","code":""},{"path":"https://energyRt.org/reference/set_glpk_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the path to the GLPK library — set_glpk_path","title":"Set the path to the GLPK library — set_glpk_path","text":"Set path GLPK library","code":""},{"path":"https://energyRt.org/reference/set_glpk_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the path to the GLPK library — set_glpk_path","text":"","code":"set_glpk_path(path = NULL)"},{"path":"https://energyRt.org/reference/set_glpk_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the path to the GLPK library — set_glpk_path","text":"path character. Path GLPK library `glpsol.*` executable.","code":""},{"path":"https://energyRt.org/reference/set_glpk_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the path to the GLPK library — set_glpk_path","text":"","code":"set_glpk_path(\"/usr/local/bin/glpk\") # Linux & Mac #> Error: The path \"/usr/local/bin/glpk\" does not exist. set_glpk_path(\"C:/Program Files/glpk/bin\") # Windows #> Error: The path \"C:/Program Files/glpk/bin\" does not exist. get_glpk_path() #> NULL"},{"path":"https://energyRt.org/reference/set_julia_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the path to Julia installation — set_julia_path","title":"Set the path to Julia installation — set_julia_path","text":"Set path Julia installation","code":""},{"path":"https://energyRt.org/reference/set_julia_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the path to Julia installation — set_julia_path","text":"","code":"set_julia_path(path = NULL)"},{"path":"https://energyRt.org/reference/set_julia_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the path to Julia installation — set_julia_path","text":"path character. Path Julia installation. NULL, system path returned.","code":""},{"path":"https://energyRt.org/reference/set_python_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get python installation path to be used to solve models — set_python_path","title":"Set or get python installation path to be used to solve models — set_python_path","text":"Set get python installation path used solve models","code":""},{"path":"https://energyRt.org/reference/set_python_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get python installation path to be used to solve models — set_python_path","text":"","code":"set_python_path(path = NULL)"},{"path":"https://energyRt.org/reference/set_python_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get python installation path to be used to solve models — set_python_path","text":"path character path python installation. NULL, global operation path used.","code":""},{"path":"https://energyRt.org/reference/size.html","id":null,"dir":"Reference","previous_headings":"","what":"Size of an object — size","title":"Size of an object — size","text":"Size object","code":""},{"path":"https://energyRt.org/reference/size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size of an object — size","text":"","code":"size(   x,   level1 = FALSE,   units = \"auto\",   sort = TRUE,   decreasing = FALSE,   byteTol = 0,   asNumeric = FALSE )"},{"path":"https://energyRt.org/reference/size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size of an object — size","text":"x - R object asNumeric","code":""},{"path":"https://energyRt.org/reference/size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Size of an object — size","text":"","code":"size(1) #> [1] \"56 bytes\" size(rep(1, 1e3)) #> [1] \"7.9 Kb\" size(rep(1L, 1e3)) #> [1] \"4 Kb\""},{"path":"https://energyRt.org/reference/solve.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions and methods to solve model and scenario objects — solve_model","title":"Functions and methods to solve model and scenario objects — solve_model","text":"function interpolates model, writes script directory, runs external software solve model, reads solution results, returns scenario object solution.","code":""},{"path":"https://energyRt.org/reference/solve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions and methods to solve model and scenario objects — solve_model","text":"","code":"solve_model(obj, name = NULL, ...)  # S4 method for class 'model,character' solve(a, b, ...)  solve_scenario(obj, name = obj@name, ...)  # S4 method for class 'scenario,character' solve(a, b, ...)"},{"path":"https://energyRt.org/reference/solve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions and methods to solve model and scenario objects — solve_model","text":"obj model scenario object name character name scenario return ...  solver character list solver settings tmp.dir character path temporary directory tmp.del logical delete temporary directory run","code":""},{"path":[]},{"path":"https://energyRt.org/reference/storage.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent storage type of technological process. — storage-class","title":"An S4 class to represent storage type of technological process. — storage-class","text":"Storage type technological processes accumulating capacity commodity.","code":""},{"path":"https://energyRt.org/reference/storage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 class to represent storage type of technological process. — storage-class","text":"","code":"newStorage(name, ...)"},{"path":"https://energyRt.org/reference/storage.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent storage type of technological process. — storage-class","text":"name character. Name storage (used sets). desc character. Description storage. commodity character. Name stored commodity. start data.frame. Start year storage technology available investment. region character. Region storage technology available investment. NA regions start integer. first year storage technology available investment. end data.frame. Last year storage technology available investment. region character. Region storage technology available investment. NA regions end integer. last year storage technology available investment. aux data.frame. Auxiliary commodities. acomm character. Name auxiliary commodity (used sets). unit character. Unit auxiliary commodity. olife data.frame. Operational life storage technology, applicable new investment , operational life (retirement) preexiting capacity described @stock slot. region character. Region storage technology available investment. olife integer. Operational life storage technology years. stock data.frame. Preexisting capacity storage technology region character. Region storage technology preinstalled. year integer. Year storage technology preinstalled capacity. stock numeric. Preexisting capacity storage technology particular year model. charge data.frame. Pre-charged level beginning cycle. region character. Region storage technology preinstalled can installed. year integer. Year. slice character. Time slice wich charged level specifies. charge numeric. Pre-charged targeted level specified slice. seff data.frame. Storage efficiency parameters. region character. Region storage technology preinstalled can installed. NA regions year integer. Year wich storage efficiency specifies. NA years slice character. Time slice wich storage efficiency specifies. NA slices stgeff numeric. Storage decay annual rate. inpeff numeric. Input efficiency rate. outeff numeric. Output efficiency rate. af data.frame. Availability factor parameters. region character. Region parameter actual. NA regions year integer. Year parameter actual. NA years slice character. Time slice parameter actual. NA slices af.lo numeric. Lower bound availability factor. af.numeric. Upper bound availability factor. af.fx numeric. Fixed value availability factor. cinp.lo numeric. Lower bound input commodity availability factor. cinp.numeric. Upper bound input commodity availability factor. cinp.fx numeric. Fixed value input commodity availability factor. cout.lo numeric. Lower bound output commodity availability factor. cout.numeric. Upper bound output commodity availability factor. cout.fx numeric. Fixed value output commodity availability factor. aeff data.frame. Auxiliary commodities efficiency parameters. acomm character. Name auxiliary commodity (used sets). region character. Region parameter actual. NA regions year integer. Year parameter actual. NA years slice character. Time slice parameter actual. NA slices stg2ainp numeric. Storage auxiliary input commodity coefficient (multiplier). cinp2ainp numeric. Input commodity auxiliary input commodity coefficient (multiplier). cout2ainp numeric. Output commodity auxiliary input commodity coefficient (multiplier). stg2aout numeric. Storage level auxiliary output commodity coefficient (multiplier). cinp2aout numeric. Input commodity auxiliary output commodity coefficient (multiplier). cout2aout numeric. Output commodity auxiliary output commodity coefficient (multiplier). cap2ainp numeric. Capacity auxiliary input commodity coefficient (multiplier). cap2aout numeric. Capacity auxiliary output commodity coefficient (multiplier). ncap2ainp numeric. New capacity auxiliary input commodity coefficient (multiplier). ncap2aout numeric. New capacity auxiliary output commodity coefficient (multiplier). ncap2stg numeric. New capacity storage level coefficient (multiplier). fixom data.frame. Fixed operation maintenance cost. region character. Region name wich parameter specified. NA regions. year integer. Year specified parameters actual. NA years. fixom numeric. Fixed operation maintenance cost speficied sets. varom data.frame. Variable operation maintenance cost. region character. Region name wich parameter specified. NA regions. year integer. Year specified parameter actual. NA years. slice character. Time slice specified parameter actual. NA slices. inpcost numeric. Costs associated input commodity. outcost numeric. Costs associated output commodity. stgcost numeric. Costs associated storage level. invcost data.frame. Investment cost. region character. Region name wich parameter specified. NA regions. year integer. Year specified parameter actual. NA years. invcost numeric. Overnight investment cost specified region year. wacc numeric. Weighted average cost capital. supplied, value taken global model scenario parameters. fullYear logical. TRUE, storage technology operates timeframes. region character. Region storage technology pre-installed available investment. cap2stg numeric. Charging discharging capacity storing capacity inverse ratio. weather data.frame. Weather factors multipliers. weather character. Name applied weather factor. waf.lo numeric. Coefficient links weather factor lower bound availability factor. waf.numeric. Coefficient links weather factor upper bound availability factor. waf.fx numeric. Coefficient links weather factor fixed value availability factor. wcinp.lo numeric. Coefficient links weather factor lower bound input commodity availability factor. wcinp.numeric. Coefficient links weather factor upper bound input commodity availability factor. wcinp.fx numeric. Coefficient links weather factor fixed value input commodity availability factor. wcout.lo numeric. Coefficient links weather factor lower bound output commodity availability factor. wcout.numeric. Coefficient links weather factor upper bound output commodity availability factor. wcout.fx numeric. Coefficient links weather factor fixed value output commodity availability factor. misc list. Miscellaneous information parameters. capacity data.frame. (implemented!) Capacity parameters storage technology.","code":""},{"path":"https://energyRt.org/reference/sub-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent a commodity subsidy — sub-class","title":"An S4 class to represent a commodity subsidy — sub-class","text":"S4 class represent commodity subsidy","code":""},{"path":"https://energyRt.org/reference/sub-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent a commodity subsidy — sub-class","text":"name character. desc character. comm character. region character. defVal numeric. value data.frame. misc list.","code":""},{"path":"https://energyRt.org/reference/summand-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — summand-class","title":"Title — summand-class","text":"Title","code":""},{"path":"https://energyRt.org/reference/summand-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Title — summand-class","text":"desc character. variable character. .sum list. mult data.frame. defVal numeric. misc list.","code":""},{"path":"https://energyRt.org/reference/supply-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent a supply of a commodity — supply-class","title":"An S4 class to represent a supply of a commodity — supply-class","text":"S4 class represent supply commodity","code":""},{"path":"https://energyRt.org/reference/supply-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent a supply of a commodity — supply-class","text":"name character. desc character. commodity character. unit character. weather data.frame. reserve data.frame. availability data.frame. region character. misc list.","code":""},{"path":"https://energyRt.org/reference/sypply.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new supply object — newSupply","title":"Create new supply object — newSupply","text":"Create new supply object","code":""},{"path":"https://energyRt.org/reference/sypply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new supply object — newSupply","text":"","code":"# S4 method for class 'character' newSupply(name, ...)  # S4 method for class 'supply' update(object, ...)"},{"path":"https://energyRt.org/reference/tax-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent a commodity tax — tax-class","title":"An S4 class to represent a commodity tax — tax-class","text":"S4 class represent commodity tax","code":""},{"path":"https://energyRt.org/reference/tax-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent a commodity tax — tax-class","text":"name character. Name comm character. desc character. region character. year numeric. defVal numeric. value data.frame. misc list.","code":""},{"path":"https://energyRt.org/reference/technology.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent technology — technology-class","title":"An S4 class to represent technology — technology-class","text":"S4 class represent technology Create object class `technology`.","code":""},{"path":"https://energyRt.org/reference/technology.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 class to represent technology — technology-class","text":"","code":"newTechnology(   name = \"\",   desc = \"\",   input = data.frame(),   output = data.frame(),   group = data.frame(),   aux = data.frame(),   units = data.frame(),   cap2act = as.numeric(1),   geff = data.frame(),   ceff = data.frame(),   aeff = data.frame(),   af = data.frame(),   afs = data.frame(),   weather = data.frame(),   capacity = data.frame(),   invcost = data.frame(),   fixom = data.frame(),   varom = data.frame(),   olife = data.frame(),   region = character(),   start = data.frame(),   end = data.frame(),   timeframe = character(),   fullYear = TRUE,   optimizeRetirement = FALSE,   misc = list() )  # S4 method for class 'technology' update(object, ...)"},{"path":"https://energyRt.org/reference/technology.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 class to represent technology — technology-class","text":"object object class technology ... slot-names data update (see `newTechnology`)","code":""},{"path":"https://energyRt.org/reference/technology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 class to represent technology — technology-class","text":"object class technology.","code":""},{"path":"https://energyRt.org/reference/technology.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent technology — technology-class","text":"name character, name technology used sets desc character, optional description technology reference. input main (non-auxilary) input commodities, data.frame columns: comm character, name input commodity unit character, unit input commodity group character, name input group input commodities-substitutes combustion numeric, combustion factor 0 1 (default 1) calculate emissions fuels combustion (commodities intermediate consumption, broadly) output main (non-auxilary) output commodities, data.frame columns: comm character, name output commodity unit character, unit output commodity group character, name output group output commodities-substitutes aux auxilary commodities, input output, data.frame columns: acomm character, name auxilary commodity unit character, unit auxilary commodity units key units process activity capacity. data.frame columns: capacity character, name capacity unit use character, name use unit activity character, name activity unit costs character, name cost unit group optional details groups, data.frame columns: group character, name group desc character, optional description group unit character, optional unit group cap2act numeric. Capacity activity ratio. Default 1. Specifies much product (output) produced per unit capacity. geff input-group efficiency parameter, data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year slice character, name slice parameter applied, NA every slice group character, name group parameter applied, required ginp2use numeric, group input use ratio, NA means changes default value ceff commodity-related efficiency parameters, data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year slice character, name slice parameter applied, NA every slice comm character, name commodity parameter applied, required cinp2use numeric, commodity input use parameter, NA means default value use2cact numeric, use commodity activity parameter, NA means default value cact2cout numeric, commodity activity commodity output parameter, NA means default value (1) cinp2ginp numeric, commodity input group input parameter, NA means default value (1) share.lo numeric, lower bound share commodity within group, NA means default value(0) fixed value specified share.numeric, upper bound share commodity within group, NA means default value(1) fixed value specified share.fx numeric, fixed share commodity within group, NA ignored afc.lo numeric, lower bound physical value commodity, NA ignored afc.numeric, upper bound physical value commodity, NA ignored afc.fx numeric, fixed physical value commodity, NA ignored aeff auxilary-commodity-related efficiency parameters, data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year slice character, name slice parameter applied, NA every slice acomm character, name auxilary commodity parameter applied, required cinp2ainp numeric, main commodity input auxilary commodity input parameter, NA ignored cinp2aout numeric, main commodity input auxilary commodity output parameter, NA ignored cout2ainp numeric, main commodity output auxilary commodity input parameter, NA ignored cout2aout numeric, main commodity output auxilary commodity output parameter, NA ignored act2ainp numeric, technology activity auxilary commodity input parameter, NA ignored act2aout numeric, technology activity auxilary commodity output parameter, NA ignored cap2ainp numeric, technology capacity auxilary commodity input parameter, NA ignored cap2aout numeric, technology capacity auxilary commodity output parameter, NA ignored ncap2ainp numeric, technology new capacity auxilary commodity input parameter, NA ignored ncap2aout numeric, technology new capacity auxilary commodity output parameter, NA ignored stg2ainp (!!!implemented!!!) numeric, technology storage level auxilary commodity input parameter, NA ignored stg2aout (!!!implemented!!!) numeric, technology storage level auxilary commodity output parameter, NA ignored sinp2ainp (!!!implemented!!!) numeric, technology storage input auxilary commodity input parameter, NA ignored sinp2aout (!!!implemented!!!) numeric, technology storage input auxilary commodity output parameter, NA ignored sout2ainp (!!!implemented!!!) numeric, technology storage output auxilary commodity input parameter, NA ignored sout2aout (!!!implemented!!!) numeric, technology storage output auxilary commodity output parameter, NA ignored af timeslice-level availability factor parameters, data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year slice character, name slice parameter applied, NA every time-slice technology timeframe af.lo numeric, lower bound availability factor, NA means default value (0) fixed value specified af.numeric, upper bound availability factor, NA means default value (1) fixed value specified af.fx numeric, fixed availability factor, NA ignored rampup numeric, ramp-time constraint, NA ignored rampdown numeric, ramp-time constraint, NA ignored afs timeframe level (group slices) availability factor constraints, data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year slice character, name timeframe parameter applied, requires, NA return error afs.lo numeric, lower bound availability factor timeframe, NA means default value (0) fixed value specified afs.numeric, upper bound availability factor timeframe, NA means default value (1) fixed value specified afs.fx numeric, fixed availability factor timeframe, NA ignored weather external (\"weather\") factors affecting technology availability paramaters, data.frame columns: weather character, name applied weather factor, required comm character, name commodity specified `afc.*` affected weather factor, required wafc.lo numeric, multiplying coefficient lower bound commodity availability parameter `afc.lo`, NAs ignored fixed values used wafc.numeric, multiplying coefficient upper bound commodity availability parameter `afc.`, NAs ignored fixed values used wafc.fx numeric, multiplying coefficient fixed value commodity availability parameter `afc.fx`, NAs ignored fixed values used waf.lo numeric, multiplying coefficient lower bound availability factor parameter `af.lo`, NAs ignored fixed values used waf.numeric, multiplying coefficient upper bound availability factor parameter `af.`, NAs ignored fixed values used waf.fx numeric, multiplying coefficient fixed value availability factor parameter `af.fx`, NAs ignored fixed values used wafs.numeric, multiplying coefficient upper bound availability factor parameter `afs.`, NAs ignored fixed values used wafs.lo numeric, multiplying coefficient lower bound availability factor parameter `afs.lo`, NAs ignored fixed values used wafs.fx numeric, multiplying coefficient fixed value availability factor parameter `afs.fx`, NAs ignored fixed values used fixom fixed operational maintenance cost (per unit capacity year), data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year fixom numeric, fixed operational maintannance cost, NA means default value (0) varom variable operational maintenance cost (per unit activity commodity), data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year slice character, name time-slice (grand-)parent timeframe parameter applied, NA every time-slice technology timeframe varom numeric, variable operational maintannance cost per unit activity, NA means default value (0) comm character, name commodity parameter applied, required `cvarom` parameter cvarom numeric, variable operational maintannance cost per unit commodity, NA means default value (0) acomm character, name auxilary commodity `avarom` applied, required `avarom` parameter avarom numeric, variable operational maintannance cost per unit auxilary commodity, NA means default value (0) invcost total overnight investment costs project (per unit capacity), data.frame columns: region character, name region parameter applied, NA every region year integer, year parameter applied, NA every year invcost numeric, total overnight investment costs project (per unit capacity), NA means default value (0) start first year technology can installed, data.frame columns: region character, name region parameter applied, NA every region start integer, first year technology can installed, NA means years model horizon end last year technology can installed, data.frame columns: region character, name region parameter applied, NA means default value (-Inf) end integer, last year technology can installed, NA means default value (Inf) olife operational life installed technology (years), data.frame columns: region character, name region parameter applied, NA every region olife integer, operational life installed technology (years), NA means default value (1) stock predefined stock installed technology (units capacity), data.frame columns: region character, name region parameter applied, NA every region year integer, year stock specified, required, values specified years interpolated. stock numeric, predefined existing future capacity technology (units capacity), NA means default value (0) optimizeRetirement logical. Currently ignored. upgrade.technology character. Currently ignored. fullYear logical. Currently ignored. timeframe character name timeframe level technology operating. default, lowest level commodities technology applied. region character vector regions technology exist can installed. misc list miscellaneous information. capacity data.frame (implemented!) Capacity parameters technology.","code":""},{"path":"https://energyRt.org/reference/trade-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to represent inter-regional trade — trade-class","title":"An S4 class to represent inter-regional trade — trade-class","text":"S4 class represent inter-regional trade","code":""},{"path":"https://energyRt.org/reference/trade-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to represent inter-regional trade — trade-class","text":"name character. Short name trade object, used sets. desc character. Description trade object. commodity character. traded commodity short name. routes data.frame. Source destination regions. bivariate trade define directions. trade data.frame. Technical parameters trade. aux data.frame. Auxiliary commodity trade. aeff data.frame. Auxiliary commodity efficiency parameters. invcost data.frame. Investment cost, used capacityVariable TRUE. olife numeric. Operational life trade object. start numeric. Start year trade-type process available investment. end numeric. End year trade-type process available investment. stock data.frame. Capacity stock trade object. capacityVariable logical. TRUE, capacity variable trade object used. FALSE, capacity defined availability parameters (`ava.*`) trade-flow units. cap2act numeric. Capacity activity ratio. misc list. Additional information. fixom data.frame. (implemented!) Fixed operation maintenance costs. varom data.frame. (implemented!) Variable operation maintenance costs. capacity data.frame. (implemented!) Capacity parameters trade object.","code":""},{"path":"https://energyRt.org/reference/tsl2dtm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert time-slices to date-time, extract year, month, day of the year, or hour — tsl2dtm","title":"Convert time-slices to date-time, extract year, month, day of the year, or hour — tsl2dtm","text":"Convert time-slices date-time, extract year, month, day year, hour","code":""},{"path":"https://energyRt.org/reference/tsl2dtm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert time-slices to date-time, extract year, month, day of the year, or hour — tsl2dtm","text":"","code":"tsl2dtm(   tsl,   format = tsl_guess_format(tsl),   tmz = \"UTC\",   year = NULL,   mday = NULL )  tsl2year(tsl, return.null = T)  tsl2yday(tsl, return.null = T)  tsl2hour(tsl, return.null = T)  tsl2month(tsl, format = tsl_guess_format(tsl), return.null = T)"},{"path":"https://energyRt.org/reference/tsl2dtm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert time-slices to date-time, extract year, month, day of the year, or hour — tsl2dtm","text":"tsl character vector time slices format character, time slices format tmz time-zone year year, used time-slices store year mday day month, time slices without information return.null logical, valid cased values NA, NULL returned return.null = TRUE,","code":""},{"path":"https://energyRt.org/reference/tsl2dtm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert time-slices to date-time, extract year, month, day of the year, or hour — tsl2dtm","text":"Vector Date-Time format","code":""},{"path":"https://energyRt.org/reference/tsl2dtm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert time-slices to date-time, extract year, month, day of the year, or hour — tsl2dtm","text":"tsl2year(): Extract year time-slices tsl2yday(): Extract day year time-slices tsl2hour(): Extract hour time-slices tsl2month(): Extract month time-slices","code":""},{"path":"https://energyRt.org/reference/tsl2dtm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert time-slices to date-time, extract year, month, day of the year, or hour — tsl2dtm","text":"","code":"tsl <- c(\"y2007_d365_h15\", NA, \"d151_h22\", \"d001\", \"m10_h12\") tsl2dtm(tsl[1]) #> [1] \"2007-12-31 15:00:00 UTC\" tsl2dtm(tsl[1:2]) #> Warning:  1 failed to parse. #> [1] \"2007-12-31 15:00:00 UTC\" NA                        tsl2dtm(tsl[2]) #> NULL tsl2dtm(tsl[3]) #> NULL tsl2dtm(tsl[4]) #> NULL tsl2dtm(tsl[3], year = 2010) #> [1] \"2010-05-31 22:00:00 UTC\" tsl2dtm(tsl[4], year = 1900) #> [1] \"1900-01-01 UTC\" tsl2dtm(tsl[3:4], year = 1900) #> NULL tsl2year(tsl) #> [1] 2007   NA   NA   NA   NA tsl #> [1] \"y2007_d365_h15\" NA               \"d151_h22\"       \"d001\"           #> [5] \"m10_h12\"        tsl2yday(tsl) #> [1] 365  NA 151   1  NA tsl #> [1] \"y2007_d365_h15\" NA               \"d151_h22\"       \"d001\"           #> [5] \"m10_h12\"        tsl2hour(tsl) #> [1] 15 NA 22 NA 12 tsl2month(c(\"d001_h00\", \"d151_h22\", \"d365_h23\")) #> [1]  1  5 12 tsl2month(c(\"m01_h12\", \"m05_h02\", \"m10_h01\")) #> [1]  1  5 10"},{"path":"https://energyRt.org/reference/tsl_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Common formats of time-slices. — tsl_formats","title":"Common formats of time-slices. — tsl_formats","text":"Common formats time-slices.","code":""},{"path":"https://energyRt.org/reference/tsl_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common formats of time-slices. — tsl_formats","text":"","code":"tsl_formats"},{"path":"https://energyRt.org/reference/tsl_formats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Common formats of time-slices. — tsl_formats","text":"character vector formats: d365 daily time-slices, 365 year (leap year's 366th day disregarded) d365_h24 time slices year-day numbers hours, 8760 total","code":""},{"path":"https://energyRt.org/reference/tsl_guess_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess format of time-slices — tsl_guess_format","title":"Guess format of time-slices — tsl_guess_format","text":"Guess format time-slices","code":""},{"path":"https://energyRt.org/reference/tsl_guess_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess format of time-slices — tsl_guess_format","text":"","code":"tsl_guess_format(tsl)"},{"path":"https://energyRt.org/reference/tsl_guess_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess format of time-slices — tsl_guess_format","text":"tsl","code":""},{"path":"https://energyRt.org/reference/tsl_guess_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guess format of time-slices — tsl_guess_format","text":"","code":"tsl <- c(\"y2007_d365_h15\", NA, \"d151_h22\", \"d001\", \"m10_h12\") tsl_guess_format(tsl) #> NULL tsl_guess_format(tsl[1]) #> [1] \"y_d365_h24\" tsl_guess_format(tsl[2]) #> NULL tsl_guess_format(tsl[3]) #> [1] \"d365_h24\" tsl_guess_format(tsl[4]) #> [1] \"d365\" tsl_guess_format(tsl[5]) #> [1] \"m12_h24\""},{"path":"https://energyRt.org/reference/weather-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — weather-class","title":"Title — weather-class","text":"Title","code":""},{"path":"https://energyRt.org/reference/weather-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Title — weather-class","text":"name character. desc character. unit character. region character. timeframe character. defVal numeric. weather data.frame. misc list.","code":""},{"path":"https://energyRt.org/reference/write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write scenario object as a Python, Julia, GAMS, or MathProg script with data files to a directory — write_script","title":"Write scenario object as a Python, Julia, GAMS, or MathProg script with data files to a directory — write_script","text":"Write scenario object Python, Julia, GAMS, MathProg script data files directory","code":""},{"path":"https://energyRt.org/reference/write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write scenario object as a Python, Julia, GAMS, or MathProg script with data files to a directory — write_script","text":"","code":"write_script(scen, tmp.dir = NULL, solver = NULL, ...)  write_sc(x, tmp.dir = NULL, solver = NULL, ...)  write.sc(x, tmp.dir = NULL, solver = NULL, ...)"},{"path":"https://energyRt.org/reference/write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write scenario object as a Python, Julia, GAMS, or MathProg script with data files to a directory — write_script","text":"scen scenario object, must interpolated tmp.dir character, path solver list character solver specification. ... additional solver parameters","code":""},{"path":[]},{"path":"https://energyRt.org/reference/yday2YDAY.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert year-days to YDAY set 'dNNN' — yday2YDAY","title":"Convert year-days to YDAY set 'dNNN' — yday2YDAY","text":"Convert year-days YDAY set 'dNNN'","code":""},{"path":"https://energyRt.org/reference/yday2YDAY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert year-days to YDAY set 'dNNN' — yday2YDAY","text":"","code":"yday2YDAY(x, width = 3, prefix = \"d\", flag = \"0\")"},{"path":"https://energyRt.org/reference/yday2YDAY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert year-days to YDAY set 'dNNN' — yday2YDAY","text":"flag","code":""}]
