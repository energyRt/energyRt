energyRt 0.11.14.9000 @dev (Feb 09 2024)

BREAKING CHANGES
* @stock slot is depreciated, parameter `stock` moved to @capacity slot
* trade@trade$cost is renamed and moved to trade@varom$varom
* trade@start, @end, @olife changed from numeric to data.frame format for consistency across classes
* early.retirement is renamed to optimizeRetirement

NEW FEATURES
* added new parameters @capacity cap.up, cap.lo, ncap.up, ncap.lo, ret.up, ret.lo constraints on capacity, new capacity, retirement for technology, storage, and trade. (retirement is not implemented yet for storage and trade.)
* added trade@fixom slot and parameter
* added trade@varom slot with varom (renamed `cost`) and markup (from @trade slot) parameters
* added tech@invcost@retcost - costs of early retirement of stock and new installations

STARTED/RESERVED/NOT IMPLEMENTED
* added early (optimized / endogenous) retirement of stock and new installations in storage and trade classes.

energyRt 0.11.13.9000 @dev (Feb 05 2024)
BUG FIXES
* early.retirement interpolation error (dplyr, NULL object) fixed in `technology` class

OTHER CHANGES
* export/import format for "gdx" ignores case.

NEW FEATURES
* added functions to set/get python and julia paths

energyRt 0.11.12.9000 @dev (Feb 05 2024)
NEW FEATURES
* added (reserved, not implemented) `@capacity` slots to `technology`, `storage`, and `trade` classes for futher implementation of additional parameters and constraints, including bounds on total capacity, new capacity, and individual weighted average cost of capital (WACC) for each technology, storage, and trade (a column in the @invcost slot). The @stock slot is to be deprecated in the future, moving the `stock` column to the @capacity slots.
* added (reserved, not implemented) `@fixom` and `@varom` slots to trade.
* !!!ToDo: add warnings for deprecated slots and unused yet (reserved) slots.
* added preset `solver_options` for alternative languages, solvers, and methods.

energyRt 0.11.11.9000 @dev (Feb 04 2024)
BUG FIXES
* fixed duplicated columns in getData when arrow used
* error handle in read_results when model is not solved
* custom constraints translation to JuMP, Python, MathProg (still unstable)

NEW FEATURES
* added progress bar tools
